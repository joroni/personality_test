* {}

body {}

.question {
  width: 70%;
  margin: 0 auto;
  height: auto;
  display: block;
  background: #eeeeee;
}

.question h1 {
  text-align: center;
  padding-top: 30px;
  color: #666666;
}

.question h2 {
  width: 100%;
  font-size: 22px;
  color: #0c1e5c;
  padding: 1% 3% 0% 3%;
}
/*
.question ul:nth-child(odd) {
  background: #d0dff6;
  width: 30%;
  padding: 8px;
  margin: 1% 9%;
  display: inline-block;
  color: #0c1e5c;
}

.question ul:nth-child(even) {
  background: #d0dff6;
  width: 30%;
  padding: 8px;
  margin: 1% 9%;
  display: inline-block;
  color: #0c1e5c;
}
*/

.button {
  text-align: center;
  margin: 1% 0;
}

.btn {
  background: #8bf8a7;
  padding: 5px;
}



.navi {
  text-align: center;
  display: table;
  width: 100%;
}
.navi ul { display: table-row; }
.navi li { display: table-cell; width: 20%; }
.navi li a { display: block; border: 1px solid #000; }


 /* 
        Use :not with impossible condition so inputs are only hidden 
        if pseudo selectors are supported. Otherwise the user would see
        no inputs and no highlighted stars.
    */
    .rating input[type="radio"]:not(:nth-of-type(0)) {
      /* hide visually */    
      border: 0;
      clip: rect(0 0 0 0);
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px;
  }
  .rating [type="radio"]:not(:nth-of-type(0)) + label {
      display: none;
  }
  
  label[for]:hover {
      cursor: pointer;
  }
  
  .rating .stars label:before {
      content: "â˜…";
  }
  
  .stars label {
      color: lightgray;
  }
  
  .stars label:hover {
      text-shadow: 0 0 1px #000;
  }
  
  .rating [type="radio"]:nth-of-type(1):checked ~ .stars label:nth-of-type(-n+1),
  .rating [type="radio"]:nth-of-type(2):checked ~ .stars label:nth-of-type(-n+2),
  .rating [type="radio"]:nth-of-type(3):checked ~ .stars label:nth-of-type(-n+3),
  .rating [type="radio"]:nth-of-type(4):checked ~ .stars label:nth-of-type(-n+4),
  .rating [type="radio"]:nth-of-type(5):checked ~ .stars label:nth-of-type(-n+5) {
      color: orange;
  }
  
  .rating [type="radio"]:nth-of-type(1):focus ~ .stars label:nth-of-type(1),
  .rating [type="radio"]:nth-of-type(2):focus ~ .stars label:nth-of-type(2),
  .rating [type="radio"]:nth-of-type(3):focus ~ .stars label:nth-of-type(3),
  .rating [type="radio"]:nth-of-type(4):focus ~ .stars label:nth-of-type(4),
  .rating [type="radio"]:nth-of-type(5):focus ~ .stars label:nth-of-type(5) {
      color: darkorange;
  }